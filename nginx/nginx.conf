user  nginx;
worker_processes auto;


error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Number of file descriptors used for Nginx.
worker_rlimit_nofile 200000;

events {
    # Determines how many clients will be served by each worker process.
    worker_connections 20000;
    # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread
    use epoll;
    # Accept as many connections as possible, after nginx gets notification about a new connect
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 30;

    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 1000;

    # Allow the server to close the connection after a client stops responding.
    reset_timedout_connection on;

    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;

    # If the client stops reading data, free up the stale client connection after this much tim
    send_timeout 2;

    # Compression.
    #gzip on;
    #gzip_min_length 10240;
    #gzip_proxied expired no-cache no-store private auth;
    #gzip_types text/plain text/css text/xml text/javascript application/x-javascript applicatio
    #gzip_disable "msie6";

    include /etc/nginx/conf.d/*.conf;
}
